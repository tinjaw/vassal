<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Trigger Action trait</title>
  <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
</head>
<body>
<table border="0" cellpadding="2" cellspacing="2" width="100%">
  <tbody>
  <tr align="center">
  <td valign="top">
  <h1>VASSAL Reference Manual</h1>
  <small><a href="index.htm">Home</a> &gt; <a href="GameModule.htm">Module</a>
  &gt; <a href="PieceWindow.htm">Game Piece Palette</a></small> <small>&gt;<b>
  </b><a href="GamePiece.htm">Game Piece</a></small> <small>&gt; <strong>Trigger Action</strong></small><br>
  </td>
  </tr>
  <tr>
  <td valign="top">
  <hr size="2" width="100%">
  <h2>Trigger Action Trait&nbsp;</h2>
  <table border="0" cellpadding="2" cellspacing="2" width="100%">
    <tbody>
    <tr>
    <td valign="top">
    Trigger Action is a multi-purpose trait which is used to activate one or more other traits of the same piece. You
    can use it to combine commands into one, to automatically fire commands in response to other commands (including <a
      href="GlobalKeyCommand.htm">Global Key Commands</a>) when certain conditions apply, or to fire off multiple
    commands at a time. <br>
    <br>    
   <table border="0" cellpadding="2" cellspacing="2" width="100%">
      <tbody>
      <tr>
      <td valign="top">
      <img src="images/GamePieceOrder.png" alt=""><br>
      </td>

      <td valign="top">
      When combining multiple Trigger Actions and key commands into sophisticated behaviors,
      the principles of <a href="GamePiece.htm#TraitOrder">Trait Order</a> should be reviewed. When a 
      Key Command (or Named Key Command) is received by a Game Piece (whether by an actual key being pressed by the player
      or from a Trigger Action trait), the <a href="GamePiece.htm#Traits">Traits</a> are
      visited in a particular order to see if they listen for that Key Command, and if they do have an entry for that
      Key Command the appropriate part of the Trait activates. <br>
      <br>
      The order Traits <i>within</i> the piece are visited is as follows:
      <ol>
        <li>First any traits <i>except for</i> Trigger Action and Report Action traits are visited. This happens
          starting at the bottom of the list and proceeding up toward the <a href="BasicPiece.htm">Basic Piece</a>
          trait.</li>
        <li>Then, once every trait that isn't a Trigger Action or Report Action trait has been visited, we then visit
          those traits, this time starting at the <i>top</i> of the list just beneath the Basic Piece trait and
          proceeding towards the bottom.</li>
      </ol>
      </td>
      </tr>
      </tbody>
    </table>

    <br>
    <b>Description:</b>&nbsp; A brief description of the trait which will appear in the <a href="GamePiece.htm">Piece
    Definer window</a> for the piece or prototype. Particularly useful in distinguishing multiple <i>Trigger Action</i>
    traits from one another.<br>
    <br>
    <b>Trigger when properties match:</b>&nbsp; If not left blank, the trait will only generate new key commands if the
    piece matches this <a href="PropertyMatchExpression.htm">Property Expression</a>. <br>
    <br>
    <b>Menu Command:</b>&nbsp; Adds an item to the piece's right-click context menu that will fire the triggered
    commands (provided the property expression is matched).<br>
    <br>
    <b>Keyboard Command:</b>&nbsp; A key command or <a href="NamedKeyCommand.htm">Named Key Command</a> corresponding to
    the menu item. The only functional difference between putting a entering a command here and entering it in the <i>
    Watch for these Keystrokes</i> field below is that if a regular keyboard shortcut is entered here it will appear
    alongside the <i>Menu Command</i> text above in the right-click context menu item for this trait as the shortcut for
    that item. Apart from that, use of this field is interchangeable with the <i>Watch for these Keystrokes</i> field.
    <br>
    <br>
    <b>Watch for these Keystrokes:</b>&nbsp; When any of these Key Commands and/or <a href="NamedKeyCommand.htm">Named
    Key Commands</a> is detected, fires the keystrokes listed below (in <i>Perform these Keystrokes</i>), provided the
    property expression (if any) is matched.<br>Key commands can be detected, for example, when one of the other traits
    on the piece is activated by the player pressing that trait's keyboard shortcut or selecting the corresponding item
    from the right-click context menu. Key commands can <i>also</i> be detected when sent from elsewhere via a 
    <a href="GlobalKeyCommand.htm">Global Key Command</a> or when chained from another <i>Trigger Action</i> trait on
    this piece, allowing you to set up complex chaining and forking behaviors. Click the <i>Add</i> button to add
    additional fields to accomodate more keystrokes. To remove unwanted keystrokes, simply blank the lines -- extra
    lines will be removed next time you open the trait's properties.<br>
    <br>
    <b>Perform these Keystrokes:</b>&nbsp; The key commands and/or <a href="NamedKeyCommand.htm">Named Key Commands</a>
    to invoke for this piece whenever one of the above key commands (in the <i>Perform these Keystrokes</i> and/or <i>
    Keyboard Command</i> fields) is observed, provided that the property expression (if any) is matched. Click the <i>
    Add</i> button to add additional fields to accomodate more keystrokes. To remove unwanted keystrokes, simply blank
    the lines -- extra lines will be removed next time you open the trait's properties.<br>
    <br>
    <b>Repeat this set of KeyStrokes (Loop)?</b>&nbsp; If checked, allows you to define logic for a "loop" to generate
    the specified key commands multiple times. Otherwise the listed key commands are triggered once each.<br>
    <br>
    <b>Type of loop:</b>&nbsp; lets you configure your loop.<br>
    <br>
    &nbsp;&nbsp;<i>Repeat fixed number of times</i>&nbsp; This loop option allows you to repeat the set of key strokes a
    specified number times.<br>
    <br>
    &nbsp;&nbsp;<i>Repeat while condition is true</i>&nbsp; This loop option allows you to repeat the set of key strokes 
    <b>while</b> a <a href="PropertyMatchExpression.htm">Property Expression</a> remains true. If the expression
    initially evaluates as false, the key strokes will not be issued at all (compare with the <i>until</i> condition
    below).<br>
    <br>
    &nbsp;&nbsp;<i>Repeat until condition is true</i>&nbsp; This loop option allows you to repeat the set of key strokes 
    <b>until</b> a <a href="PropertyMatchExpression.htm">Property Expression</a> becomes true. The key commands will be
    issued at least once before the expression is checked for the first time.<br>
    <br>
    <b>Loop how many times?</b>&nbsp; An <a href="Expression.htm">Expression</a> that defines how many times to generate
    the set of key commands (for a fixed loop).<br>
    <br>
    <b>Loop while/until condition is true:</b>&nbsp; Enter the <a href="PropertyMatchExpression.htm">Property Expression
    </a> that controls how long to keep looping (for a while or until loop).<br>
    <br>
    <b>Perform this KeyStroke once before looping starts:</b>&nbsp; For all loop types, enter an optional key command or 
    <a href="NamedKeyCommand.htm">Named Key Command</a> that will be performed once before the looping process
    commences.<br>
    <br>
    <b>Perform this KeyStroke once after looping complete:</b>&nbsp; For all loop types, enter an optional key command
    or <a href="NamedKeyCommand.htm">Named Key Command</a> that will be performed once after the looping process
    finishes.<br>
    <br>
    <b>Create a Loop Index Property?</b>&nbsp; For all loop types, allows you to create a Property whose value will
    change as the looping process proceeds.<br>
    <br>
    <b>Index Property Name:</b>&nbsp; The name of the property that will be created.<br>
    <br>
    <b>Index Property start value:</b>&nbsp; An <a href="Expression.htm">Expression</a> that sets the value of the index
    property prior to looping commencing. The expression must evaluate to a whole number.<br>
    <br>
    <b>Index Property increment value:</b>&nbsp; An <a href="Expression.htm">Expression</a> that defines how much will
    be added to the Index Property at the start of each loop. The expression must evaluate to a whole number.<br>
    <br>
    <br>
    <br>
    <b>Example #1:</b>&nbsp; Your module's main <a href="Map.htm">Map</a> has an entry in its field for <i>Key Command
    to apply to all units ending movement on this map</i> (the last field on the Map's properties configuration dialog)
    which is configured to send the <a href="NamedKeyCommand.htm">Named Key Command</a> "MovedOnMap" to every piece that
    moves. Your piece then uses a <i>Trigger Action</i> trait that watches for the <i>MovedOnMap</i> Named Key Command.
    It checks to make sure the piece has actually changed locations (as opposed to simply being adjusted in its space),
    and if the piece has truly changed locations then it fires two additional key commands: one will lower a count of
    its piece type for the region it has just left, and the second will increase the count of its piece type in the
    region in which it has just arrived.<br>
    <br>
    <b>Example #2:</b>&nbsp; A piece has a <a href="Layer.htm">Layer</a> to track action points and a
    <a href="Translate.htm">Move Fixed Distance</a> trait to move it forward. The Move Fixed Distance trait can be
    assigned a Named Key Command such as <i>MoveForward</i>) with no command name (so that it does not appear in the
    right-click context menu). Then a Trigger Action trait with the command Move and the keystroke Ctrl+M can trigger
    both the Move command and decrease the action points layer by one.<br>
    <br>
    <b>Example #3:</b>&nbsp; A piece has separate <a href="Layer.htm">Layer</a> traits for hit points and for a
    "critically wounded" status for when the hit points are less than 2. A Trigger Action trait can watch for the
    keystrokes that affect the hit-point layer and respond by activating the wounded layer by matching the property
    expression for when the hit points are &lt; 2 and the wound level is not active.<br>
    <br>
    <b>Example #4:</b>&nbsp; A trait that is activated whenever any of a whole list of types of piece are due to be
    placed on the map. It performs a looping function to look for a piece of the appropriate type in a prioritized list
    of places to find them (e.g. "in the force pool", "in the reserve", "in the dead pool", etc), and stops when it
    either places a piece successfully or when it runs out of places to look.
    </td><td valign="top"><img alt="" src="images/TriggerAction.png"><br>
    <br>
    <img alt="" src="images/TriggerAction2.png"><br>
    <br>
    <img alt="" src="images/TriggerAction3.png"><br>
    <br>
    <img alt="" src="images/TriggerAction4.png"><br>
    </td>
    </tr>
    </tbody>
  </table>
  <hr size="2" width="100%"></td>
  </tr>
  <tr>
  </tr>
  </tbody>
</table>
</body>
</html>
